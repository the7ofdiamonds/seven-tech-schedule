{"version":3,"file":"src_views_Schedule_jsx.js","mappings":";;;;;;;;;;;;;;;;;;;AAAoD;AACM;AACH;AAEH;AAcX;AACqC;AACV;AAEpE,SAASwB,iBAAiBA,CAAA,EAAG;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGrB,2DAAS,CAAC,CAAC;EAE1B,MAAM;IAAEsB,UAAU;IAAEC;EAAQ,CAAC,GAAGtB,wDAAW,CAAEuB,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACnE,MAAM;IACJC,OAAO;IACPC,aAAa;IACbC,MAAM;IACNC,UAAU;IACVC,UAAU;IACVC,QAAQ;IACRC,eAAe;IACfC,OAAO;IACPC,WAAW;IACXC,SAAS;IACTC,YAAY;IACZC;EACF,CAAC,GAAGpC,wDAAW,CAAEuB,KAAK,IAAKA,KAAK,CAACc,QAAQ,CAAC;EAE1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,+CAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2C,cAAc,EAAEC,iBAAiB,CAAC,GAAG5C,+CAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6C,cAAc,EAAEC,iBAAiB,CAAC,GAAG9C,+CAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,+CAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiD,YAAY,EAAEC,eAAe,CAAC,GAAGlD,+CAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmD,eAAe,EAAEC,kBAAkB,CAAC,GAAGpD,+CAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtD,+CAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACuD,+BAA+B,EAAEC,0BAA0B,CAAC,GACjExD,+CAAQ,CAAC,EAAE,CAAC;EACd,MAAM,CAACyD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1D,+CAAQ,CAAC,CAACwB,UAAU,CAAC,CAAC;EACxE,MAAM,CAACmC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG5D,+CAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAAC6D,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG9D,+CAAQ,CAAC,EAAE,CAAC;EAC1E,MAAM,CAAC+D,WAAW,EAAEC,cAAc,CAAC,GAAGhE,+CAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACiE,OAAO,EAAEC,UAAU,CAAC,GAAGlE,+CAAQ,CAAC,eAAe,CAAC;EAEvD,MAAMmE,aAAa,GAAGpE,6CAAM,CAAC,IAAI,CAAC;EAClC,MAAMqE,aAAa,GAAGrE,6CAAM,CAAC,IAAI,CAAC;EAClC,MAAMsE,gBAAgB,GAAGtE,6CAAM,CAAC,IAAI,CAAC;EACrC,MAAMuE,oBAAoB,GAAGvE,6CAAM,CAAC,IAAI,CAAC;EACzC,MAAMwE,gCAAgC,GAAGxE,6CAAM,CAAC,IAAI,CAAC;EACrD,MAAMyE,kBAAkB,GAAGzE,6CAAM,CAAC,IAAI,CAAC;EAEvC,MAAM0E,QAAQ,GAAGrE,wDAAW,CAAC,CAAC;EAC9B,MAAMsE,QAAQ,GAAGzE,6DAAW,CAAC,CAAC;;EAE9B;EACAH,gDAAS,CAAC,MAAM;IACd2E,QAAQ,CAAC1D,6EAAc,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAE,CAAC0D,QAAQ,CAAC,CAAC;EAEd3E,gDAAS,CAAC,MAAM;IACd,IAAIwC,YAAY,EAAE;MAChBI,cAAc,CAACxB,kEAAiB,CAACoB,YAAY,CAAC,CAAC;IACjD;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACAxC,gDAAS,CAAC,MAAM;IACd,IAAI0B,UAAU,EAAE;MACdiD,QAAQ,CAACpE,gEAAO,CAAC,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACmB,UAAU,EAAEiD,QAAQ,CAAC,CAAC;EAE1B3E,gDAAS,CAAC,MAAM;IACd,IAAI,CAAC0B,UAAU,EAAE;MACfwC,cAAc,CAAC,MAAM,CAAC;MACtBE,UAAU,CAAC,kCAAkC,CAAC;IAChD;EACF,CAAC,EAAE,CAAC1C,UAAU,CAAC,CAAC;;EAEhB;EACA1B,gDAAS,CAAC,MAAM;IACd,IAAI2B,OAAO,EAAE;MACXgD,QAAQ,CAACnE,gFAAiB,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC,EAAE,CAACmB,OAAO,EAAEgD,QAAQ,CAAC,CAAC;EAEvB3E,gDAAS,CAAC,MAAM;IACd,IAAI+B,aAAa,EAAE;MACjBmC,cAAc,CAAC,OAAO,CAAC;MACvBE,UAAU,CAACrC,aAAa,CAAC;IAC3B;EACF,CAAC,EAAE,CAACkC,WAAW,EAAEE,OAAO,CAAC,CAAC;EAE1BnE,gDAAS,CAAC,MAAM;IACd,IAAIgC,MAAM,EAAE;MACVc,iBAAiB,CAACzB,2DAAU,CAACW,MAAM,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZhC,gDAAS,CAAC,MAAM;IACdqE,aAAa,CAACQ,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAC9DT,aAAa,CAACO,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAC9DR,gBAAgB,CAACM,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IACpEP,oBAAoB,CAACK,OAAO,GAC1BC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;IAC/CL,kBAAkB,CAACG,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAEN/E,gDAAS,CAAC,MAAM;IACd,IAAI6C,cAAc,IAAIA,cAAc,CAACmC,MAAM,GAAG,CAAC,EAAE;MAC/C9B,eAAe,CAACL,cAAc,CAAC,CAAC,CAAC,CAAC;MAClC8B,QAAQ,CAAClE,yEAAU,CAACoC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB7C,gDAAS,CAAC,MAAM;IACd,IAAIiD,YAAY,IAAIoB,aAAa,CAACQ,OAAO,EAAE;MACzC,MAAMI,GAAG,GAAGZ,aAAa,CAACQ,OAAO,CAACK,KAAK;MACvClC,iBAAiB,CAAC1B,2DAAU,CAACU,MAAM,EAAEiD,GAAG,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,CAAChC,YAAY,CAAC,CAAC;EAElBjD,gDAAS,CAAC,MAAM;IACd,IAAI+C,cAAc,EAAE;MAClBK,eAAe,CAACL,cAAc,CAAC,CAAC,CAAC,CAAC;MAClC4B,QAAQ,CAACjE,yEAAU,CAACqC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMoC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIf,aAAa,CAACQ,OAAO,EAAE;MACzB3B,eAAe,CAACkC,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACnCP,QAAQ,CAAClE,yEAAU,CAAC2E,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;MACxCd,UAAU,CAAC,eAAe,CAAC;MAE3B,IAAIC,aAAa,CAACQ,OAAO,CAACK,KAAK,KAAKI,SAAS,EAAE;QAC7C,MAAML,GAAG,GAAGZ,aAAa,CAACQ,OAAO,CAACK,KAAK;QAEvC5D,2DAAU,CAACU,MAAM,EAAEiD,GAAG,CAAC;MACzB,CAAC,MAAM;QACLM,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC7C;IACF;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAIL,KAAK,IAAK;IAClC,IAAId,aAAa,CAACO,OAAO,EAAE;MACzBzB,eAAe,CAACgC,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACnCP,QAAQ,CAACjE,yEAAU,CAAC0E,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;MACxC;MACAd,UAAU,CAAC,gBAAgB,CAAC;IAC9B;EACF,CAAC;EAEDpE,gDAAS,CAAC,MAAM;IACd,IAAIiC,UAAU,IAAIC,UAAU,EAAE;MAC5ByC,QAAQ,CAAC9D,0EAAW,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACoB,UAAU,EAAEC,UAAU,EAAEyC,QAAQ,CAAC,CAAC;;EAEtC;;EAEA,MAAMe,mBAAmB,GAAIN,KAAK,IAAK;IACrC,IAAIb,gBAAgB,CAACM,OAAO,EAAE;MAC5BvB,kBAAkB,CAAC8B,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACtCP,QAAQ,CAAC/D,4EAAa,CAACwE,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;IAC7C;EACF,CAAC;;EAED;;EAEAlF,gDAAS,CAAC,MAAM;IACd,IAAI2B,OAAO,EAAE;MACXgD,QAAQ,CAACzD,0FAA2B,CAAC,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,CAACS,OAAO,EAAEgD,QAAQ,CAAC,CAAC;EAEvB3E,gDAAS,CAAC,MAAM;IACd,IACEqC,OAAO,IACPmC,oBAAoB,CAACK,OAAO,IAC5BL,oBAAoB,CAACK,OAAO,CAACc,OAAO,CAACX,MAAM,GAAG,CAAC,EAC/C;MACAxB,sBAAsB,CAACgB,oBAAoB,CAACK,OAAO,CAACc,OAAO,CAAC,CAAC,CAAC,CAACT,KAAK,CAAC;MACrEP,QAAQ,CACN5D,gFAAiB,CAACyD,oBAAoB,CAACK,OAAO,CAACc,OAAO,CAAC,CAAC,CAAC,CAACT,KAAK,CACjE,CAAC;IACH;EACF,CAAC,EAAE,CAAC7C,OAAO,EAAEsC,QAAQ,CAAC,CAAC;EAEvB3E,gDAAS,CAAC,MAAM;IACd,IACEqC,OAAO,IACPoC,gCAAgC,CAACI,OAAO,IACxCJ,gCAAgC,CAACI,OAAO,CAACc,OAAO,CAACX,MAAM,GAAG,CAAC,EAC3D;MACAtB,0BAA0B,CACxBe,gCAAgC,CAACI,OAAO,CAACc,OAAO,CAAC,CAAC,CAAC,CAACT,KACtD,CAAC;MACDP,QAAQ,CACNxD,4FAA6B,CAC3BsD,gCAAgC,CAACI,OAAO,CAACc,OAAO,CAAC,CAAC,CAAC,CAACT,KACtD,CACF,CAAC;IACH;EACF,CAAC,EAAE,CAAC7C,OAAO,EAAEsC,QAAQ,CAAC,CAAC;EAEvB,MAAMiB,uBAAuB,GAAIR,KAAK,IAAK;IACzC,IAAIZ,oBAAoB,CAACK,OAAO,EAAE;MAChCrB,sBAAsB,CAAC4B,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MAC1CP,QAAQ,CAAC5D,gFAAiB,CAACqE,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;MAC/CK,OAAO,CAACM,GAAG,CAACtC,mBAAmB,CAAC;IAClC;EACF,CAAC;EAED,MAAMuC,mCAAmC,GAAIV,KAAK,IAAK;IACrD,IAAIX,gCAAgC,CAACI,OAAO,EAAE;MAC5CnB,0BAA0B,CAAC0B,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MAC9CP,QAAQ,CAACxD,4FAA6B,CAACiE,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;IAC7D;EACF,CAAC;;EAED;EACAlF,gDAAS,CAAC,MAAM;IACd,IAAIqC,OAAO,KAAK,EAAE,IAAIX,UAAU,EAAE;MAChCiD,QAAQ,CAAC3D,8EAAe,CAAC2C,iBAAiB,CAAC,CAAC;IAC9C;EACF,CAAC,EAAE,CAACtB,OAAO,EAAEsC,QAAQ,CAAC,CAAC;EAEvB,MAAMoB,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIhC,uBAAuB,EAAE;MAC3B,MAAMiC,gBAAgB,GAAG,CAACtE,UAAU,EAAEqC,uBAAuB,CAAC;MAC9DC,0BAA0B,CAAC,EAAE,CAAC;MAC9BW,QAAQ,CAAC3D,8EAAe,CAACgF,gBAAgB,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BnC,yBAAyB,CAAEoC,SAAS,IAAK,CAACA,SAAS,CAAC;EACtD,CAAC;EAED,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMJ,gBAAgB,GAAGrC,iBAAiB,CAAC0C,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC;IACxExC,oBAAoB,CAACoC,gBAAgB,CAAC;IACtCrB,QAAQ,CAAC3D,8EAAe,CAACgF,gBAAgB,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIpE,eAAe,EAAE;MACnBuC,QAAQ,CAAC7D,0EAAW,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAM2F,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACE,IAAI;IACvEH,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAI,sBAAqBL,QAAS,YAAW;EACnE,CAAC;EAED1G,gDAAS,CAAC,MAAM;IACd,IAAImC,QAAQ,EAAE;MACZwE,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAG,YAAY;IACrC;EACF,CAAC,EAAE,CAAC5E,QAAQ,CAAC,CAAC;EAEd,IAAIJ,aAAa,EAAE;IACjB,OACEiF,oDAAA;MAAKC,SAAS,EAAC;IAAuB,GACpCD,oDAAA,eAAOjF,aAAoB,CACxB,CAAC;EAEV;EAEA,IAAID,OAAO,EAAE;IACX,OAAOkF,oDAAA,cAAK,YAAe,CAAC;EAC9B;EAEA,OACEA,oDAAA,CAAAE,2CAAA,QACEF,oDAAA;IAAIC,SAAS,EAAC;EAAO,GAAC,UAAY,CAAC,EAElCtE,WAAW,IAAIA,WAAW,CAACqC,MAAM,GAAG,CAAC,GACpCgC,oDAAA;IAAKC,SAAS,EAAC;EAAwB,GACrCD,oDAAA,gBACEA,oDAAA,gBACEA,oDAAA,aACEA,oDAAA,aAAI,KAAO,CAAC,EACZA,oDAAA,aAAI,KAAO,CAAC,EACZA,oDAAA,aAAI,KAAO,CAAC,EACZA,oDAAA,aAAI,KAAO,CAAC,EACZA,oDAAA,aAAI,KAAO,CAAC,EACZA,oDAAA,aAAI,KAAO,CAAC,EACZA,oDAAA,aAAI,KAAO,CACT,CACC,CAAC,EACRA,oDAAA,gBACEA,oDAAA,aACGrE,WAAW,CAACwE,GAAG,CAAEC,KAAK,IACrBJ,oDAAA,CAAAE,2CAAA,QACEF,oDAAA;IAAI/B,GAAG,EAAEmC,KAAK,CAACC;EAAI,GAChBD,KAAK,CAACE,KAAK,IAAIF,KAAK,CAACG,GAAG,GACpB,GAAEH,KAAK,CAACE,KAAM,MAAKF,KAAK,CAACG,GAAI,EAAC,GAC/B,QACF,CACJ,CACH,CACC,CACC,CACF,CACJ,CAAC,GAEN,EACD,EAEDP,oDAAA;IAAKC,SAAS,EAAC,UAAU;IAACxF,EAAE,EAAC;EAAU,GACrCuF,oDAAA;IAAKC,SAAS,EAAC;EAAiB,GAC7BpE,cAAc,IAAIA,cAAc,CAACmC,MAAM,GAAG,CAAC,GAC1CgC,oDAAA;IAAKC,SAAS,EAAC;EAAkB,GAC/BD,oDAAA;IAAOQ,OAAO,EAAC;EAAM,GAAC,eAAoB,CAAC,EAC3CR,oDAAA;IACES,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,MAAM;IACXjG,EAAE,EAAC,aAAa;IAChBkG,GAAG,EAAEtD,aAAc;IACnBuD,QAAQ,EAAEzC,gBAAiB;IAC3B0C,YAAY,EAAE5E,YAAa;IAC3B6E,GAAG,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAAE,GAC3CpF,cAAc,CAACsE,GAAG,CAAC,CAACe,IAAI,EAAE9B,KAAK,KAC9BY,oDAAA;IAAQ/B,GAAG,EAAEmB,KAAM;IAAClB,KAAK,EAAEgD;EAAK,GAC7BA,IACK,CACT,CACK,CACL,CAAC,GAEN,EACD,EAEAnF,cAAc,IAAIA,cAAc,CAACiC,MAAM,GAAG,CAAC,GAC1CgC,oDAAA;IAAKC,SAAS,EAAC;EAAkB,GAC/BD,oDAAA;IAAOQ,OAAO,EAAC;EAAM,GAAC,eAAoB,CAAC,EAC3CR,oDAAA;IACES,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,MAAM;IACXjG,EAAE,EAAC,aAAa;IAChBkG,GAAG,EAAErD,aAAc;IACnBuD,YAAY,EAAE1E,YAAa;IAC3ByE,QAAQ,EAAEnC;EAAiB,GAC1B1C,cAAc,CAACoE,GAAG,CAAC,CAACgB,IAAI,EAAE/B,KAAK,KAC9BY,oDAAA;IAAQ/B,GAAG,EAAEmB,KAAM;IAAClB,KAAK,EAAEiD;EAAK,GAC7BA,IACK,CACT,CACK,CACL,CAAC,GAEN,EAEC,CACF,CAAC,EAEL1F,yBAAyB,IAAIA,yBAAyB,CAACuC,MAAM,GAAG,CAAC,GAChEgC,oDAAA;IAAKC,SAAS,EAAC;EAA2B,GACxCD,oDAAA;IAAOQ,OAAO,EAAC;EAAS,GAAC,8BAAmC,CAAC,EAC7DR,oDAAA;IACES,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,8BAA8B;IACnCjG,EAAE,EAAC,sBAAsB;IACzBkG,GAAG,EAAElD,gCAAiC;IACtCmD,QAAQ,EAAE9B,mCAAoC;IAC9C+B,YAAY,EAAEpE;EAAgC,GAC7ChB,yBAAyB,CAAC0E,GAAG,CAAC,CAACiB,aAAa,EAAEhC,KAAK,KAClDY,oDAAA;IAAQ/B,GAAG,EAAEmB,KAAM;IAAClB,KAAK,EAAEkD,aAAa,CAACX;EAAK,GAC3CW,aAAa,CAACX,IACT,CACT,CACK,CACL,CAAC,GAEN,EACD,EAyCAtD,OAAO,GACN6C,oDAAA;IAAKC,SAAS,EAAG,mBAAkBhD,WAAY;EAAE,GAC/C+C,oDAAA,eAAO7C,OAAc,CAClB,CAAC,GAEN,EACD,EAEAzC,UAAU,GACTsF,oDAAA;IAAQqB,OAAO,EAAE7B;EAAY,GAC3BQ,oDAAA,aAAI,UAAY,CACV,CAAC,GAETA,oDAAA,CAACzF,mEAAwB,MAAE,CAE7B,CAAC;AAEP;AAEA,+DAAeC,iBAAiB;;;;;;;;;;;;;;ACnchC,SAASD,wBAAwBA,CAAA,EAAG;EAClC,MAAMmF,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACE,IAAI;EAEvE,MAAML,WAAW,GAAGA,CAAA,KAAM;IACxBE,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAI,sBAAqBL,QAAS,YAAW;EACnE,CAAC;EAED,MAAM4B,YAAY,GAAGA,CAAA,KAAM;IACzB3B,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAI,uBAAsBL,QAAS,YAAW;EACpE,CAAC;EAED,MAAM6B,YAAY,GAAGA,CAAA,KAAM;IACzB5B,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAI,uBAAsBL,QAAS,YAAW;EACpE,CAAC;EAED,OACEM,oDAAA,CAAAE,2CAAA,QACEF,oDAAA;IAAKC,SAAS,EAAC;EAAS,GACtBD,oDAAA;IAAQqB,OAAO,EAAE5B;EAAY,GAC3BO,oDAAA,aAAI,OAAS,CACP,CAAC,EAETA,oDAAA;IAAQqB,OAAO,EAAEC;EAAa,GAC5BtB,oDAAA,aAAI,SAAW,CACT,CAAC,EAETA,oDAAA;IAAQqB,OAAO,EAAEE;EAAa,GAC5BvB,oDAAA,aAAI,QAAU,CACR,CACL,CACL,CAAC;AAEP;AAEA,+DAAezF,wBAAwB","sources":["webpack://seven-tech-schedule/./src/views/Schedule.jsx","webpack://seven-tech-schedule/./src/views/components/NavigationLogin.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getUser } from '../controllers/usersSlice';\nimport {\n  getAvailableTimes,\n  updateDate,\n  updateTime,\n  updateDueDate,\n  updateSummary,\n  updateEvent,\n  sendInvites,\n  updateDescription,\n  updateAttendees,\n  getOfficeHours,\n  getCommunicationPreferences,\n  updateCommunicationPreference,\n} from '../controllers/scheduleSlice.js';\nimport { formatOfficeHours, datesAvail, timesAvail } from '../utils/Schedule';\nimport NavigationLoginComponent from './components/NavigationLogin';\n\nfunction ScheduleComponent() {\n  const { id } = useParams();\n\n  const { user_email, user_id } = useSelector((state) => state.users);\n  const {\n    loading,\n    scheduleError,\n    events,\n    start_date,\n    start_time,\n    event_id,\n    event_date_time,\n    summary,\n    description,\n    attendees,\n    office_hours,\n    communication_preferences,\n  } = useSelector((state) => state.schedule);\n\n  const [officeHours, setOfficeHours] = useState('');\n  const [availableDates, setAvailableDates] = useState('');\n  const [availableTimes, setAvailableTimes] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedSummary, setSelectedSummary] = useState('');\n  const [selectedDescription, setSelectedDescription] = useState('');\n  const [selectedCommunicationPreference, setCommunicationPreference] =\n    useState('');\n  const [selectedAttendees, setSelectedAttendees] = useState([user_email]);\n  const [showAdditionalAttendee, setShowAdditionalAttendee] = useState(false);\n  const [additionalAttendeeEmail, setAdditionalAttendeeEmail] = useState('');\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState('Choose a date');\n\n  const dateSelectRef = useRef(null);\n  const timeSelectRef = useRef(null);\n  const summarySelectRef = useRef(null);\n  const descriptionSelectRef = useRef(null);\n  const communicationPreferenceSelectRef = useRef(null);\n  const attendeesSelectRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Office Hours\n  useEffect(() => {\n    dispatch(getOfficeHours());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (office_hours) {\n      setOfficeHours(formatOfficeHours(office_hours));\n    }\n  }, [office_hours]);\n\n  // Client info\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getUser());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (!user_email) {\n      setMessageType('info');\n      setMessage('Login to schedule an appointment');\n    }\n  }, [user_email]);\n\n  // Events\n  useEffect(() => {\n    if (user_id) {\n      dispatch(getAvailableTimes());\n    }\n  }, [user_id, dispatch]);\n\n  useEffect(() => {\n    if (scheduleError) {\n      setMessageType('error');\n      setMessage(scheduleError);\n    }\n  }, [messageType, message]);\n\n  useEffect(() => {\n    if (events) {\n      setAvailableDates(datesAvail(events));\n    }\n  }, [events]);\n\n  useEffect(() => {\n    dateSelectRef.current = document.getElementById('date_select');\n    timeSelectRef.current = document.getElementById('time_select');\n    summarySelectRef.current = document.getElementById('summary_select');\n    descriptionSelectRef.current =\n      document.getElementById('description_select');\n    attendeesSelectRef.current = document.getElementById('description_select');\n  }, []);\n\n  useEffect(() => {\n    if (availableDates && availableDates.length > 0) {\n      setSelectedDate(availableDates[0]);\n      dispatch(updateDate(availableDates[0]));\n    }\n  }, [availableDates]);\n\n  useEffect(() => {\n    if (selectedDate && dateSelectRef.current) {\n      const key = dateSelectRef.current.value;\n      setAvailableTimes(timesAvail(events, key));\n    }\n  }, [selectedDate]);\n\n  useEffect(() => {\n    if (availableTimes) {\n      setSelectedTime(availableTimes[0]);\n      dispatch(updateTime(availableTimes[0]));\n    }\n  }, [availableTimes]);\n\n  const handleDateChange = (event) => {\n    if (dateSelectRef.current) {\n      setSelectedDate(event.target.value);\n      dispatch(updateDate(event.target.value));\n      setMessage('Choose a time');\n\n      if (dateSelectRef.current.value !== undefined) {\n        const key = dateSelectRef.current.value;\n\n        timesAvail(events, key);\n      } else {\n        console.error('selectedIndex is undefined');\n      }\n    }\n  };\n\n  const handleTimeChange = (event) => {\n    if (timeSelectRef.current) {\n      setSelectedTime(event.target.value);\n      dispatch(updateTime(event.target.value));\n      // dispatch(updateDueDate());\n      setMessage('Choose a topic');\n    }\n  };\n\n  useEffect(() => {\n    if (start_date && start_time) {\n      dispatch(updateEvent());\n    }\n  }, [start_date, start_time, dispatch]);\n\n  // Summary\n\n  const handleSummaryChange = (event) => {\n    if (summarySelectRef.current) {\n      setSelectedSummary(event.target.value);\n      dispatch(updateSummary(event.target.value));\n    }\n  };\n\n  // Description\n\n  useEffect(() => {\n    if (user_id) {\n      dispatch(getCommunicationPreferences());\n    }\n  }, [user_id, dispatch]);\n\n  useEffect(() => {\n    if (\n      summary &&\n      descriptionSelectRef.current &&\n      descriptionSelectRef.current.options.length > 0\n    ) {\n      setSelectedDescription(descriptionSelectRef.current.options[0].value);\n      dispatch(\n        updateDescription(descriptionSelectRef.current.options[0].value)\n      );\n    }\n  }, [summary, dispatch]);\n\n  useEffect(() => {\n    if (\n      summary &&\n      communicationPreferenceSelectRef.current &&\n      communicationPreferenceSelectRef.current.options.length > 0\n    ) {\n      setCommunicationPreference(\n        communicationPreferenceSelectRef.current.options[0].value\n      );\n      dispatch(\n        updateCommunicationPreference(\n          communicationPreferenceSelectRef.current.options[0].value\n        )\n      );\n    }\n  }, [summary, dispatch]);\n\n  const handleDescriptionChange = (event) => {\n    if (descriptionSelectRef.current) {\n      setSelectedDescription(event.target.value);\n      dispatch(updateDescription(event.target.value));\n      console.log(selectedDescription);\n    }\n  };\n\n  const handleCommunicationPreferenceChange = (event) => {\n    if (communicationPreferenceSelectRef.current) {\n      setCommunicationPreference(event.target.value);\n      dispatch(updateCommunicationPreference(event.target.value));\n    }\n  };\n\n  // Attendees\n  useEffect(() => {\n    if (summary !== '' && user_email) {\n      dispatch(updateAttendees(selectedAttendees));\n    }\n  }, [summary, dispatch]);\n\n  const handleAttendeeChange = () => {\n    if (additionalAttendeeEmail) {\n      const updatedAttendees = [user_email, additionalAttendeeEmail];\n      setAdditionalAttendeeEmail('');\n      dispatch(updateAttendees(updatedAttendees));\n    }\n  };\n\n  const handleAddAttendee = () => {\n    setShowAdditionalAttendee((prevState) => !prevState);\n  };\n\n  const handleRemoveAttendee = (index) => {\n    const updatedAttendees = selectedAttendees.filter((_, i) => i !== index);\n    setSelectedAttendees(updatedAttendees);\n    dispatch(updateAttendees(updatedAttendees));\n  };\n\n  const handleClick = () => {\n    if (event_date_time) {\n      dispatch(sendInvites());\n    }\n  };\n\n  const handleLogin = () => {\n    const baseHost = window.location.protocol + '//' + window.location.host;\n    window.location.href = `/login/?redirectTo=${baseHost}/schedule/`;\n  };\n\n  useEffect(() => {\n    if (event_id) {\n      window.location.href = '/dashboard';\n    }\n  }, [event_id]);\n\n  if (scheduleError) {\n    return (\n      <div className=\"status-bar card error\">\n        <span>{scheduleError}</span>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">schedule</h2>\n\n      {officeHours && officeHours.length > 0 ? (\n        <div className=\"office-hours-card card\">\n          <table>\n            <thead>\n              <tr>\n                <th>SUN</th>\n                <th>MON</th>\n                <th>TUE</th>\n                <th>WED</th>\n                <th>THU</th>\n                <th>FRI</th>\n                <th>SAT</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                {officeHours.map((hours) => (\n                  <>\n                    <td key={hours.day}>\n                      {hours.start && hours.end\n                        ? `${hours.start} - ${hours.end}`\n                        : 'CLOSED'}\n                    </td>\n                  </>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n\n      <div className=\"schedule\" id=\"schedule\">\n        <div className=\"schedule-select\">\n          {availableDates && availableDates.length > 0 ? (\n            <div className=\"date-select card\">\n              <label htmlFor=\"date\">Choose a Date</label>\n              <select\n                type=\"text\"\n                name=\"date\"\n                id=\"date_select\"\n                ref={dateSelectRef}\n                onChange={handleDateChange}\n                defaultValue={selectedDate}\n                min={new Date().toISOString().split('T')[0]}>\n                {availableDates.map((date, index) => (\n                  <option key={index} value={date}>\n                    {date}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {availableTimes && availableTimes.length > 0 ? (\n            <div className=\"time-select card\">\n              <label htmlFor=\"time\">Choose a Time</label>\n              <select\n                type=\"time\"\n                name=\"time\"\n                id=\"time_select\"\n                ref={timeSelectRef}\n                defaultValue={selectedTime}\n                onChange={handleTimeChange}>\n                {availableTimes.map((time, index) => (\n                  <option key={index} value={time}>\n                    {time}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n\n      {communication_preferences && communication_preferences.length > 0 ? (\n        <div className=\"communication-select card\">\n          <label htmlFor=\"summary\">Preferred Communication Type</label>\n          <select\n            type=\"text\"\n            name=\"preferred_communication_type\"\n            id=\"communication_select\"\n            ref={communicationPreferenceSelectRef}\n            onChange={handleCommunicationPreferenceChange}\n            defaultValue={selectedCommunicationPreference}>\n            {communication_preferences.map((communication, index) => (\n              <option key={index} value={communication.type}>\n                {communication.type}\n              </option>\n            ))}\n          </select>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {/* {attendees && attendees.length > 0 ? (\n        <div className=\"attendees-select card\">\n          <label htmlFor=\"attendees\">Attendees</label>\n          {attendees.map((attendee, index) => (\n            <div className=\"attendee\">\n              <h4 key={index}>{attendee}</h4>\n              <button\n                className=\"remove-attendee\"\n                onClick={handleRemoveAttendee}>\n                <h4>-</h4>\n              </button>\n              <button onClick={handleAddAttendee}>\n                <h4>+</h4>\n              </button>\n            </div>\n          ))}\n        </div>\n      ) : (\n        ''\n      )} */}\n\n      {/* <div\n        className={`additional-attendee card ${\n          showAdditionalAttendee ? 'view' : ''\n        }`}\n        id=\"additional_attendee\">\n        <label htmlFor=\"attendees\">Additional Attendee</label>\n        <div className=\"attendee\">\n          <input\n            type=\"email\"\n            value={additionalAttendeeEmail}\n            onChange={(event) => setAdditionalAttendeeEmail(event.target.value)}\n          />\n          <button className=\"add-attendee\" onClick={handleAttendeeChange}>\n            <h4>+</h4>\n          </button>\n        </div>\n      </div> */}\n\n      {message ? (\n        <div className={`status-bar card ${messageType}`}>\n          <span>{message}</span>\n        </div>\n      ) : (\n        ''\n      )}\n\n      {user_email ? (\n        <button onClick={handleClick}>\n          <h3>SCHEDULE</h3>\n        </button>\n      ) : (\n        <NavigationLoginComponent />\n      )}\n    </>\n  );\n}\n\nexport default ScheduleComponent;\n","function NavigationLoginComponent() {\n  const baseHost = window.location.protocol + '//' + window.location.host;\n\n  const handleLogin = () => {\n    window.location.href = `/login/?redirectTo=${baseHost}/schedule/`;\n  };\n\n  const handleSignUp = () => {\n    window.location.href = `/signup/?redirectTo=${baseHost}/schedule/`;\n  };\n\n  const handleForgot = () => {\n    window.location.href = `/forgot/?redirectTo=${baseHost}/schedule/`;\n  };\n\n  return (\n    <>\n      <div className=\"options\">\n        <button onClick={handleLogin}>\n          <h3>LOGIN</h3>\n        </button>\n\n        <button onClick={handleSignUp}>\n          <h3>SIGN UP</h3>\n        </button>\n\n        <button onClick={handleForgot}>\n          <h3>FORGOT</h3>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default NavigationLoginComponent;\n"],"names":["useEffect","useRef","useState","useNavigate","useParams","useSelector","useDispatch","getUser","getAvailableTimes","updateDate","updateTime","updateDueDate","updateSummary","updateEvent","sendInvites","updateDescription","updateAttendees","getOfficeHours","getCommunicationPreferences","updateCommunicationPreference","formatOfficeHours","datesAvail","timesAvail","NavigationLoginComponent","ScheduleComponent","id","user_email","user_id","state","users","loading","scheduleError","events","start_date","start_time","event_id","event_date_time","summary","description","attendees","office_hours","communication_preferences","schedule","officeHours","setOfficeHours","availableDates","setAvailableDates","availableTimes","setAvailableTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","selectedSummary","setSelectedSummary","selectedDescription","setSelectedDescription","selectedCommunicationPreference","setCommunicationPreference","selectedAttendees","setSelectedAttendees","showAdditionalAttendee","setShowAdditionalAttendee","additionalAttendeeEmail","setAdditionalAttendeeEmail","messageType","setMessageType","message","setMessage","dateSelectRef","timeSelectRef","summarySelectRef","descriptionSelectRef","communicationPreferenceSelectRef","attendeesSelectRef","dispatch","navigate","current","document","getElementById","length","key","value","handleDateChange","event","target","undefined","console","error","handleTimeChange","handleSummaryChange","options","handleDescriptionChange","log","handleCommunicationPreferenceChange","handleAttendeeChange","updatedAttendees","handleAddAttendee","prevState","handleRemoveAttendee","index","filter","_","i","handleClick","handleLogin","baseHost","window","location","protocol","host","href","createElement","className","Fragment","map","hours","day","start","end","htmlFor","type","name","ref","onChange","defaultValue","min","Date","toISOString","split","date","time","communication","onClick","handleSignUp","handleForgot"],"sourceRoot":""}