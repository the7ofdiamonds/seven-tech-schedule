{"version":3,"file":"Schedule.js","sources":["../../node_modules/react-redux/es/hooks/useStore.js","../../node_modules/react-redux/es/hooks/useDispatch.js","../../src/views/Schedule.jsx"],"sourcesContent":["import { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext, createReduxContextHook } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : // @ts-ignore\n  createReduxContextHook(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","import { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getUser } from '../controllers/usersSlice';\nimport {\n  getAvailableTimes,\n  updateDate,\n  updateTime,\n  updateDueDate,\n  updateSummary,\n  updateEvent,\n  sendInvites,\n  updateDescription,\n  updateAttendees,\n  getOfficeHours,\n  getCommunicationPreferences,\n  updateCommunicationPreference,\n} from '../controllers/scheduleSlice.js';\nimport { formatOfficeHours, datesAvail, timesAvail } from '../utils/Schedule';\n\nfunction ScheduleComponent() {\n  const { id } = useParams();\n\n  const { user_email, user_id } = useSelector((state) => state.users);\n  const {\n    loading,\n    scheduleError,\n    events,\n    start_date,\n    start_time,\n    event_id,\n    event_date_time,\n    summary,\n    description,\n    attendees,\n    office_hours,\n    communication_preferences,\n  } = useSelector((state) => state.schedule);\n\n  const [officeHours, setOfficeHours] = useState('');\n  const [availableDates, setAvailableDates] = useState('');\n  const [availableTimes, setAvailableTimes] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedSummary, setSelectedSummary] = useState('');\n  const [selectedDescription, setSelectedDescription] = useState('');\n  const [selectedCommunicationPreference, setCommunicationPreference] =\n    useState('');\n  const [selectedAttendees, setSelectedAttendees] = useState([user_email]);\n  const [showAdditionalAttendee, setShowAdditionalAttendee] = useState(false);\n  const [additionalAttendeeEmail, setAdditionalAttendeeEmail] = useState('');\n  const [messageType, setMessageType] = useState('info');\n  const [message, setMessage] = useState('Choose a date');\n\n  const dateSelectRef = useRef(null);\n  const timeSelectRef = useRef(null);\n  const summarySelectRef = useRef(null);\n  const descriptionSelectRef = useRef(null);\n  const communicationPreferenceSelectRef = useRef(null);\n  const attendeesSelectRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(getOfficeHours());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (office_hours) {\n      setOfficeHours(formatOfficeHours(office_hours));\n    }\n  }, [office_hours]);\n\n  // Client info\n  useEffect(() => {\n    if (user_email) {\n      dispatch(getUser());\n    }\n  }, [user_email, dispatch]);\n\n  useEffect(() => {\n    if (!user_email) {\n      setMessageType('info');\n      setMessage('Login to schedule an appointment');\n    }\n  }, [user_email]);\n\n  // Events\n  useEffect(() => {\n    if (user_id) {\n      dispatch(getAvailableTimes());\n    }\n  }, [user_id, dispatch]);\n\n  useEffect(() => {\n    if (scheduleError) {\n      setMessageType('error');\n      setMessage(scheduleError);\n    }\n  }, [messageType, message]);\n\n  useEffect(() => {\n    if (events) {\n      setAvailableDates(datesAvail(events));\n    }\n  }, [events]);\n\n  useEffect(() => {\n    dateSelectRef.current = document.getElementById('date_select');\n    timeSelectRef.current = document.getElementById('time_select');\n    summarySelectRef.current = document.getElementById('summary_select');\n    descriptionSelectRef.current =\n      document.getElementById('description_select');\n    attendeesSelectRef.current = document.getElementById('description_select');\n  }, []);\n\n  useEffect(() => {\n    if (availableDates && availableDates.length > 0) {\n      setSelectedDate(availableDates[0]);\n      dispatch(updateDate(availableDates[0]));\n    }\n  }, [availableDates]);\n\n  useEffect(() => {\n    if (selectedDate && dateSelectRef.current) {\n      const key = dateSelectRef.current.value;\n      setAvailableTimes(timesAvail(events, key));\n    }\n  }, [selectedDate]);\n\n  useEffect(() => {\n    if (availableTimes) {\n      setSelectedTime(availableTimes[0]);\n      dispatch(updateTime(availableTimes[0]));\n    }\n  }, [availableTimes]);\n\n  const handleDateChange = (event) => {\n    if (dateSelectRef.current) {\n      setSelectedDate(event.target.value);\n      dispatch(updateDate(event.target.value));\n      setMessage('Choose a time');\n\n      if (dateSelectRef.current.value !== undefined) {\n        const key = dateSelectRef.current.value;\n\n        timesAvail(events, key);\n      } else {\n        console.error('selectedIndex is undefined');\n      }\n    }\n  };\n\n  const handleTimeChange = (event) => {\n    if (timeSelectRef.current) {\n      setSelectedTime(event.target.value);\n      dispatch(updateTime(event.target.value));\n      // dispatch(updateDueDate());\n      setMessage('Choose a topic');\n    }\n  };\n\n  useEffect(() => {\n    if (start_date && start_time) {\n      dispatch(updateEvent());\n    }\n  }, [start_date, start_time, dispatch]);\n\n  // Summary\n\n  const handleSummaryChange = (event) => {\n    if (summarySelectRef.current) {\n      setSelectedSummary(event.target.value);\n      dispatch(updateSummary(event.target.value));\n    }\n  };\n\n  // Description\n\n  useEffect(() => {\n    if (user_id) {\n      dispatch(getCommunicationPreferences());\n    }\n  }, [user_id, dispatch]);\n\n  useEffect(() => {\n    if (\n      summary &&\n      descriptionSelectRef.current &&\n      descriptionSelectRef.current.options.length > 0\n    ) {\n      setSelectedDescription(descriptionSelectRef.current.options[0].value);\n      dispatch(\n        updateDescription(descriptionSelectRef.current.options[0].value)\n      );\n    }\n  }, [summary, dispatch]);\n\n  useEffect(() => {\n    if (\n      summary &&\n      communicationPreferenceSelectRef.current &&\n      communicationPreferenceSelectRef.current.options.length > 0\n    ) {\n      setCommunicationPreference(\n        communicationPreferenceSelectRef.current.options[0].value\n      );\n      dispatch(\n        updateCommunicationPreference(\n          communicationPreferenceSelectRef.current.options[0].value\n        )\n      );\n    }\n  }, [summary, dispatch]);\n\n  const handleDescriptionChange = (event) => {\n    if (descriptionSelectRef.current) {\n      setSelectedDescription(event.target.value);\n      dispatch(updateDescription(event.target.value));\n      console.log(selectedDescription);\n    }\n  };\n\n  const handleCommunicationPreferenceChange = (event) => {\n    if (communicationPreferenceSelectRef.current) {\n      setCommunicationPreference(event.target.value);\n      dispatch(updateCommunicationPreference(event.target.value));\n    }\n  };\n\n  // Attendees\n  useEffect(() => {\n    if (summary !== '' && user_email) {\n      dispatch(updateAttendees(selectedAttendees));\n    }\n  }, [summary, dispatch]);\n\n  const handleAttendeeChange = () => {\n    if (additionalAttendeeEmail) {\n      const updatedAttendees = [user_email, additionalAttendeeEmail];\n      setAdditionalAttendeeEmail('');\n      dispatch(updateAttendees(updatedAttendees));\n    }\n  };\n\n  const handleAddAttendee = () => {\n    setShowAdditionalAttendee((prevState) => !prevState);\n  };\n\n  const handleRemoveAttendee = (index) => {\n    const updatedAttendees = selectedAttendees.filter((_, i) => i !== index);\n    setSelectedAttendees(updatedAttendees);\n    dispatch(updateAttendees(updatedAttendees));\n  };\n\n  const handleClick = () => {\n    if (event_date_time) {\n      dispatch(sendInvites());\n    }\n  };\n\n  useEffect(() => {\n    if (event_id) {\n      window.location.href = '/dashboard';\n    }\n  }, [event_id]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <main>\n        <h2 className=\"title\">schedule</h2>\n\n        {officeHours && officeHours.length > 0 ? (\n          <div className=\"office-hours-card card\">\n            {officeHours.map((hours, index) => (\n              <span key={index}>\n                <h4 className=\"day\">{hours.dayofweek}</h4>\n                <h4>\n                  {hours.start && hours.end\n                    ? `${hours.start} - ${hours.end}`\n                    : 'CLOSED'}\n                </h4>\n              </span>\n            ))}\n          </div>\n        ) : (\n          ''\n        )}\n\n        {user_email && (\n          <>\n            <div className=\"schedule-select\">\n              {availableDates && availableDates.length > 0 ? (\n                <div className=\"date-select card\">\n                  <label htmlFor=\"date\">Choose a Date</label>\n                  <select\n                    type=\"text\"\n                    name=\"date\"\n                    id=\"date_select\"\n                    ref={dateSelectRef}\n                    onChange={handleDateChange}\n                    defaultValue={selectedDate}\n                    min={new Date().toISOString().split('T')[0]}>\n                    {availableDates.map((date, index) => (\n                      <option key={index} value={date}>\n                        {date}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              ) : (\n                ''\n              )}\n\n              {availableTimes && availableTimes.length > 0 ? (\n                <div className=\"time-select card\">\n                  <label htmlFor=\"time\">Choose a Time</label>\n                  <select\n                    type=\"time\"\n                    name=\"time\"\n                    id=\"time_select\"\n                    ref={timeSelectRef}\n                    defaultValue={selectedTime}\n                    onChange={handleTimeChange}>\n                    {availableTimes.map((time, index) => (\n                      <option key={index} value={time}>\n                        {time}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              ) : (\n                ''\n              )}\n            </div>\n\n            {communication_preferences &&\n            communication_preferences.length > 0 ? (\n              <div className=\"communication-select card\">\n                <label htmlFor=\"summary\">Preferred Communication Type</label>\n                <select\n                  type=\"text\"\n                  name=\"preferred_communication_type\"\n                  id=\"communication_select\"\n                  ref={communicationPreferenceSelectRef}\n                  onChange={handleCommunicationPreferenceChange}\n                  defaultValue={selectedCommunicationPreference}>\n                  {communication_preferences.map((communication, index) => (\n                    <option key={index} value={communication.type}>\n                      {communication.type}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            ) : (\n              ''\n            )}\n\n            {attendees && attendees.length > 0 ? (\n              <div className=\"attendees-select card\">\n                <label htmlFor=\"attendees\">Attendees</label>\n                {attendees.map((attendee, index) => (\n                  <div className=\"attendee\">\n                    <h4 key={index}>{attendee}</h4>\n                    <button\n                      className=\"remove-attendee\"\n                      onClick={handleRemoveAttendee}>\n                      <h4>-</h4>\n                    </button>\n                    <button onClick={handleAddAttendee}>\n                      <h4>+</h4>\n                    </button>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              ''\n            )}\n\n            <div\n              className={`additional-attendee card ${\n                showAdditionalAttendee ? 'view' : ''\n              }`}\n              id=\"additional_attendee\">\n              <label htmlFor=\"attendees\">Additional Attendee</label>\n              <div className=\"attendee\">\n                <input\n                  type=\"email\"\n                  value={additionalAttendeeEmail}\n                  onChange={(event) =>\n                    setAdditionalAttendeeEmail(event.target.value)\n                  }\n                />\n                <button className=\"add-attendee\" onClick={handleAttendeeChange}>\n                  <h4>+</h4>\n                </button>\n              </div>\n            </div>\n\n            <button onClick={handleClick}>\n              <h3>SCHEDULE</h3>\n            </button>\n          </>\n        )}\n\n        {message ? (\n          <div className={`status-bar card ${messageType}`}>\n            <span>{message}</span>\n          </div>\n        ) : (\n          ''\n        )}\n      </main>\n    </>\n  );\n}\n\nexport default ScheduleComponent;\n"],"names":["createStoreHook","context","arguments","length","undefined","ReactReduxContext","useReduxContext","useDefaultReduxContext","createReduxContextHook","_useReduxContext","store","useStore","createDispatchHook","useDefaultStore","dispatch","useDispatch","ScheduleComponent","_useParams","useParams","id","_useSelector","useSelector","state","users","user_email","user_id","_useSelector2","schedule","loading","scheduleError","events","start_date","start_time","event_id","event_date_time","summary","description","attendees","office_hours","communication_preferences","_useState","useState","_useState2","_slicedToArray","officeHours","setOfficeHours","_useState3","_useState4","availableDates","setAvailableDates","_useState5","_useState6","availableTimes","setAvailableTimes","_useState7","_useState8","selectedDate","setSelectedDate","_useState9","_useState10","selectedTime","setSelectedTime","_useState11","_useState12","_useState13","_useState14","setSelectedDescription","_useState15","_useState16","selectedCommunicationPreference","setCommunicationPreference","_useState17","_useState18","selectedAttendees","setSelectedAttendees","_useState19","_useState20","showAdditionalAttendee","setShowAdditionalAttendee","_useState21","_useState22","additionalAttendeeEmail","setAdditionalAttendeeEmail","_useState23","_useState24","messageType","setMessageType","_useState25","_useState26","message","setMessage","dateSelectRef","useRef","timeSelectRef","summarySelectRef","descriptionSelectRef","communicationPreferenceSelectRef","attendeesSelectRef","useNavigate","useEffect","getOfficeHours","formatOfficeHours","getUser","getAvailableTimes","datesAvail","current","document","getElementById","updateDate","key","value","timesAvail","updateTime","handleDateChange","event","target","console","error","handleTimeChange","updateEvent","getCommunicationPreferences","options","updateDescription","updateCommunicationPreference","handleCommunicationPreferenceChange","updateAttendees","handleAttendeeChange","updatedAttendees","handleAddAttendee","prevState","handleRemoveAttendee","index","filter","_","i","handleClick","sendInvites","window","location","href","jsx","children","Fragment","className","map","hours","dayofweek","start","end","concat","jsxs","htmlFor","type","name","ref","onChange","defaultValue","min","Date","toISOString","split","date","time","communication","attendee","onClick"],"mappings":"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","x_google_ignoreList":[0,1]}